#@ load("@ytt:data", "data")
#@ serviceaccounts = {}
#@ for rolebinding in data.values.rolebindings if hasattr(data.values, 'rolebindings') else [] :
#@   for serviceaccount in rolebinding.serviceaccounts if hasattr(rolebinding, 'serviceaccounts') else []:
#@     name = serviceaccount.name
#@     namespace = serviceaccount.namespace if hasattr(serviceaccount, 'namespace') else rolebinding.namespace.lower()
#@     if hasattr(serviceaccount, 'create_serviceaccount') and serviceaccount.create_serviceaccount :
#@       if not rolebinding.tap.enabled or rolebinding.tap.service_account != name:
#@         serviceaccounts["{}$${}".format(name, namespace)] = { 'name': name, 'namespace': namespace }
#@       end
#@     end
#@   end
#@ end
#@ clusterrolebinding = data.values.clusterrolebinding if hasattr(data.values, 'clusterrolebinding') else {}
#@ for serviceaccount in clusterrolebinding.serviceaccounts if hasattr(clusterrolebinding, 'serviceaccounts') else []:
#@   name = serviceaccount.name
#@   namespace = serviceaccount.namespace if hasattr(serviceaccount, 'namespace') else rolebinding.namespace.lower()
#@   if hasattr(serviceaccount, 'create_serviceaccount') and serviceaccount.create_serviceaccount :
#@     serviceaccounts["{}$${}".format(name, namespace)] = { 'name': name, 'namespace': namespace }
#@   end
#@ end
#@ for serviceaccount in serviceaccounts.values():
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: #@ serviceaccount.get('name')
  namespace: #@ serviceaccount.get('namespace')
  labels:
    rbac-mgmt: "managed"
#@ end
